import{o as t,c as d,a as h}from"./index-DHzmZQKC.js";const e={class:"marked-body"},a=h('<h1 id="规划">规划</h1><p>为实现最终的目标，对重构过程进行了过程拆分。总共分为了六个部分。</p><h2 id="一：搭建h5组件库">一：搭建h5组件库</h2><table><thead><tr><th>事项</th><th>提炼业务规则，形成公司的h5组件库</th></tr></thead><tbody><tr><td>原因</td><td>对于特定业务场景，有相同的规则，可提炼出公共组件，方便使用，统一展示效果，减少问题</td></tr></tbody></table><h2 id="二：搭建公共方法库">二：搭建公共方法库</h2><table><thead><tr><th>事项</th><th>提炼业务规则，形成公司的方法库</th></tr></thead><tbody><tr><td>原因</td><td>对于特定业务场景，有相同的规则，可提炼出公共方法，方便使用，减少问题</td></tr></tbody></table><h2 id="三：搭建桥接库">三：搭建桥接库</h2><table><thead><tr><th>事项</th><th>搭建H5与各端交互的桥接库</th></tr></thead><tbody><tr><td>原因</td><td>方便js调用android、ios、微信小程序、支付宝小程序相关的原生方法。h5只需要调用相同的函数，传递相同的参数，便可在多端上运行。</td></tr></tbody></table><h2 id="四：开发微信小程序和支付宝小程序的原生代码">四：开发微信小程序和支付宝小程序的原生代码</h2><table><thead><tr><th>事项</th><th>搭建和开发小程序代码</th></tr></thead><tbody><tr><td>原因</td><td>barbar中的页面、登录页等核心代码使用原生来开发，能够快速展示，提供更好的交互。</td></tr></tbody></table><h2 id="五：开发h5代码">五：开发H5代码</h2><table><thead><tr><th>事项</th><th>搭建和开发H5代码</th></tr></thead><tbody><tr><td>原因</td><td>一套H5代码能够在多端运行，能够减少开发成本和测试成本。</td></tr><tr><td>步骤</td><td>为保证线上能够正常运行，在重写的过程中，应该先从边缘页面进行开发，这样可以保证每个页面开发完都能达到上线状态。避免出现页面中需要的跳转页面还没开发完，导致测试不充分的情况。同时，页面来源比较清楚，也能够及时清理掉无用的参数等内容。</td></tr></tbody></table><h2 id="六：完善前端规范">六：完善前端规范</h2><table><thead><tr><th>事项</th><th>归纳前端规范</th></tr></thead><tbody><tr><td>原因</td><td>在重写的过程中发现不足，总结归纳到前端规范中，团队成员共同遵守，增强代码可维护性。</td></tr></tbody></table>',14),r=[a],l={__name:"index",setup(o){return(b,s)=>(t(),d("div",e,r))}};export{l as default};
